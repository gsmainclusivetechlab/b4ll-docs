{"remainingRequest":"/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/node_modules/babel-loader/lib/index.js??ref--12-1!/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/docs/about.mdx","dependencies":[{"path":"/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/docs/about.mdx","mtime":1617276898439},{"path":"/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-about-mdx-360.json","mtime":1617279244160},{"path":"/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/node_modules/cache-loader/dist/cjs.js","mtime":1615479685629},{"path":"/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/node_modules/babel-loader/lib/index.js","mtime":1615479685553},{"path":"/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1615479718257},{"path":"/home/fingent/Desktop/WorkSpace/B4 client/b4ll-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1615479714656}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}