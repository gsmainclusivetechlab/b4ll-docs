"use strict";(self.webpackChunkb4ll_docs=self.webpackChunkb4ll_docs||[]).push([[143],{5558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var i=n(5893),r=n(1151),c=n(4996);const s={id:"engine",title:"Engine",sidebar_label:"Engine"},o=void 0,a={id:"architecture/engine",title:"Engine",description:"In the platform architecture. the Engine acts as a centralizer of the existing",source:"@site/docs/architecture/engine.md",sourceDirName:"architecture",slug:"/architecture/engine",permalink:"/architecture/engine",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"engine",title:"Engine",sidebar_label:"Engine"},sidebar:"someSidebar",previous:{title:"Communication Channels",permalink:"/app"},next:{title:"Biometric Suppliers",permalink:"/suppliers"}},l={},u=[];function p(e){const t={p:"p",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"In the platform architecture. the Engine acts as a centralizer of the existing\nflows. Users send requests to the Engine through the application or accessing\ndirectly a communication provider. In turn, the Engine communicates with\nBiometric Suppliers to make the services available to users."}),"\n",(0,i.jsx)(t.p,{children:"Within the biometrics engine, the lambda functions will route the biometrics\ncredentials to an appropriate biometrics\u2019 supplier. If a voice recording is\nreceived, for example, the engine will select a biometric supplier which is\ncapable of performing voice authentication. The biometric supplier selection may\nbe guided by the user\u2019s selection within the mobile app."}),"\n",(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)("img",{alt:"B4ll architetcure",src:(0,c.Z)("img/engine.svg")})})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>s});var i=n(7294);const r={},c=i.createContext(r);function s(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);