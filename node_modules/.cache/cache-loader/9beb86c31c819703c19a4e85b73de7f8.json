{"remainingRequest":"/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/docs/architecture/overview.md","dependencies":[{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/docs/architecture/overview.md","mtime":1615379398036},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-architecture-overview-md-0b1.json","mtime":1617274924706},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/node_modules/cache-loader/dist/cjs.js","mtime":1613079817669},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/node_modules/babel-loader/lib/index.js","mtime":1613079817555},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1617273431372},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1617273430009}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}