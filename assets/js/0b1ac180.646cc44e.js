"use strict";(self.webpackChunkb4ll_docs=self.webpackChunkb4ll_docs||[]).push([[872],{2075:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var i=t(5893),r=t(1151),o=t(4996);const s={id:"overview",title:"B4LL Architecture",sidebar_label:"Overview"},c=void 0,a={id:"architecture/overview",title:"B4LL Architecture",description:"This section describes the architecture proposed for the B4LL project. The",source:"@site/docs/architecture/overview.md",sourceDirName:"architecture",slug:"/architecture/overview",permalink:"/architecture/overview",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"overview",title:"B4LL Architecture",sidebar_label:"Overview"},sidebar:"someSidebar",previous:{title:"Documentation Guide",permalink:"/docguide"},next:{title:"Communication Channels",permalink:"/app"}},l={},h=[{value:"Architectural Parts",id:"architectural-parts",level:3},{value:"Connexions",id:"connexions",level:3},{value:"Detailed View",id:"detailed-view",level:3},{value:"Technological Considerations",id:"technological-considerations",level:3},{value:"Footnotes",id:"footnotes",level:5}];function d(e){const n={a:"a",admonition:"admonition",h3:"h3",h5:"h5",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This section describes the architecture proposed for the B4LL project. The\nproject was thought to be modular, allowing to offer, when necessary, new use\ncases, types of biometrics and biometrics suppliers."}),"\n",(0,i.jsxs)(n.p,{children:["The architecture is divided in three main parts: the communication channels\n(mostly represented by the application), the engine, and the biometrics\nsuppliers. Each part is briefly described below. More details can be found in\nthe following sections",(0,i.jsx)("sup",{children:(0,i.jsx)(n.a,{href:"#landingpage",children:"1"})}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Communication Channels:"})," The communication channels are responsible for\nthe communication interface between the user and the b4ll system. The main\ncommunication channel is the mobile application, however, these channels can\nuse external communication providers to supply new forms of interaction. The\nuse of Twilio to create a call center is an example of a communication\nchannel provider."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Mobile Application:"})," The main communication channel currently used in the\nproject. The mobile application will provide access to all types of\nbiometrics."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Engine:"})," This part orchestrates the connection between the other parts of\nthe architecture handling the data received from the communication channels\nand providing it to the engine."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Biometric Suppliers:"})," Biometric solutions available on the market. The\nconnection with the suppliers takes place through an SDK or API and allows\naccess to biometric recognition solutions."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"architectural-parts",children:"Architectural Parts"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Figure:"})," Main components of the architecture."]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)("img",{alt:"B4ll architetcure",src:(0,o.Z)("img/ArchitectureParts.svg")})}),"\n",(0,i.jsx)(n.h3,{id:"connexions",children:"Connexions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The elements of the communication channel are responsible for requests and\nresponses to the engine of the system."}),"\n",(0,i.jsx)(n.li,{children:"The engine orchestrates the flow of messages and directs the requests to the\nselected biometric supplier."}),"\n",(0,i.jsx)(n.li,{children:"The connection between the engine and the supplier is made using AWS lambda\nfunctions and the API or SDK provided by the supplier."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"When using B4LL, the user activates one of the communication providers that will\nintermediate data capture through the user interface. In this case, the channel\ncan be the mobile application, or another one that is necessary. The\narchitecture is prepared to accept extra communication providers and integrates\nthem with the engine. The call center is an example of this situation. In this\ncase a component to connects the call center to the engine was created."}),"\n",(0,i.jsx)(n.p,{children:"The business logic of the communication channel integrates the communication\nbetween the communication provider and the engine, allowing data capture,\nprocessing and when necessary storage. Then the biometric data is passed to the\nengine."}),"\n",(0,i.jsx)(n.p,{children:"The engine logic handle the data received from the communication channels and\nprovide it to the Biometric Suppliers in an acceptable format. The\nrequest/response connextion between engine and biometric supplier is done using\nthe supplier's API (or SDK) and the engine handler functions."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Figure:"})," Architecture components and its relations."]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)("img",{alt:"B4ll architetcure",src:(0,o.Z)("img/ArchitectureConnexions.svg")})}),"\n",(0,i.jsx)(n.admonition,{title:"Data Storage",type:"info",children:(0,i.jsx)(n.p,{children:"It is important to mention here that the biometric data is only stored on the\nbiometric suppliers side."})}),"\n",(0,i.jsx)(n.h3,{id:"detailed-view",children:"Detailed View"}),"\n",(0,i.jsx)(n.p,{children:"The diagram below sketches out a microservice-based serverless architecture.\nEmbracing a microservice architecture will make it more straightforward to add\nnew biometrics types or providers in future through the creation of new\nconnections for the new components."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Figure:"})," Detailed architectural diagram."]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)("img",{alt:"B4ll architetcure",src:(0,o.Z)("img/B4llArchitecture.svg")})}),"\n",(0,i.jsx)(n.p,{children:"Other services can also be used to enhance the user experience \u2013 for example\nDynamoDB may be used to store user data and preferences within the communication\nchannel business logic \u2013 or for other technical reasons, such as using an S3\nbucket in the biometrics engine to store image data prior to biometric\nverification."}),"\n",(0,i.jsx)(n.h3,{id:"technological-considerations",children:"Technological Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The architecture is based on a scalable serveless model using an AWS\nenvironment"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The orchestration and deployment of the components is fully automatable by\nusing AWS CloudFormation and AWS SAM."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The main language used for the project is TypeScript"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The API's follow the API Specification 3.0"}),"\n",(0,i.jsx)(n.hr,{}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"footnotes",children:"Footnotes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)("a",{name:"landingpage",children:"1 "}),": B4LL project page contains relevant\ninformation for a better understanding of the use of biometrics and how the\nB4ll project can support mobile operators in the implementation of biometric\ntechnologies."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var i=t(7294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);